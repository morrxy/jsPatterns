<!DOCTYPE html>
<html>
<head>
	<title></title>
</head>
<body>

<h1>Decorator -- Implemention Using a List</h1>
<p>from book JavaScript Patterns pdf version, page 172</p>
<h2>Let’s explore a slightly different implementation, which benefits from the dynamic nature of JavaScript and doesn’t need to use inheritance at all. Also instead of having each decorated method call the method previously in the chain, we can simply pass the result of the previous method as a parameter to the next method.</h2>
<h2>Such implementation could also allow for easy undecorating or undoing a decoration,which means simply removing an item from the list of decorators.</h2>

<pre>

</pre>

<script type="text/javascript">

function Sale(price) {
	this.price = price || 100;
	this.decorators_list = [];
}

Sale.decorators = {};

Sale.decorators.fedtax = {
	getPrice: function(price) {
		return price + price * 5 / 100;
	}
};

Sale.decorators.quebec = {
	getPrice: function(price) {
		return price + price * 7.5 / 100;
	}
};

Sale.decorators.money = {
	getPrice: function(price) {
		return "$" + price.toFixed(2);
	}
};

Sale.decorators.cdn = {
	getPrice: function(price) {
		return "CDN$ " + price.toFixed(2);
	}
};

Sale.prototype.decorate = function(decorator) {
	this.decorators_list.push(decorator);
};

Sale.prototype.getPrice = function() {
	var price = this.price,
		i,
		max = this.decorators_list.length,
		name;

	for (i = 0; i < max; i += 1) {
		name = this.decorators_list[i];
		price = Sale.decorators[name].getPrice(price);
	}

	return price;
};

Sale.prototype.undecorate2 = function(decorator) {

	var i,
		arr = [],
		max = this.decorators_list.length;

	for (i = 0; i < max; i += 1) {
		if (this.decorators_list[i] !== decorator) {
			arr[arr.length] = this.decorators_list[i];
		}
	}

	this.decorators_list = arr;

};

Sale.prototype.undecorate = function(decorator) {

	var i,
		max = this.decorators_list.length;

	for (i = 0; i < max; i += 1) {
		if (this.decorators_list[i] === decorator) {
			this.decorators_list.splice(i, 1);
			break;
		}
	}

}

// use
var sale = new Sale(100); // the price is 100 dollars
console.log(sale.getPrice());
sale.decorate('fedtax');
console.log(sale.getPrice());
sale.decorate('quebec');
console.log(sale.getPrice());
// sale.decorate('money');
sale.decorate('cdn');
console.log(sale.getPrice());
sale.undecorate('fedtax');
console.log(sale.getPrice());
sale.undecorate('cdn');
console.log(sale.getPrice());
sale.undecorate('quebec');
console.log(sale.getPrice());

</script>

</body>
</html>