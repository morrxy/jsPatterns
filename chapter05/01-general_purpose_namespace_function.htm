<!DOCTYPE html>
<html>
<head>
	<title></title>
</head>
<body>

<h1></h1>

<p>from book JavaScript Patterns pdf version, page 107</p>

<pre>
var MYAPP = MYAPP || {};

MYAPP.namespace = function(ns_string) {
	var parts = ns_string.split('.'),
		parent = MYAPP,
		i;
	
	// strip redundant leading global
	if (parts[0] === "MYAPP") {
		parts = parts.slice(1);
	}

	for (i = 0; i < parts.length; i += 1) {
		// create a property if it doesn't exist
		if (typeof parent[parts[i]] === "undefined") {
			parent[parts[i]] = {};
		}
		parent = parent[parts[i]];
	}
	return parent;
};

// assign returned value to a local var
var module2 = MYAPP.namespace('MYAPP.modules.module2');
console.log(module2 === MYAPP.modules.module2); // true

// skip initial 'MYAPP'
MYAPP.namespace('modules.module51');
console.log(MYAPP.modules);

// long namespace
MYAPP.namespace('once.upon.a.time.there.was.this.long.nested.property');
console.log(MYAPP.once);
</pre>

<script type="text/javascript">
var MYAPP = MYAPP || {};

MYAPP.namespace = function(ns_string) {
	var parts = ns_string.split('.'),
		parent = MYAPP,
		i;
	
	// strip redundant leading global
	if (parts[0] === "MYAPP") {
		parts = parts.slice(1);
	}

	for (i = 0; i < parts.length; i += 1) {
		// create a property if it doesn't exist
		if (typeof parent[parts[i]] === "undefined") {
			parent[parts[i]] = {};
		}
		parent = parent[parts[i]];
	}
	return parent;
};

// assign returned value to a local var
var module2 = MYAPP.namespace('MYAPP.modules.module2');
console.log(module2 === MYAPP.modules.module2); // true

// skip initial 'MYAPP'
MYAPP.namespace('modules.module51');
console.log(MYAPP.modules);

// long namespace
MYAPP.namespace('once.upon.a.time.there.was.this.long.nested.property');
console.log(MYAPP.once);
</script>

</body>
</html>